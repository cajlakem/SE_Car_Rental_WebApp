<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath/>
    </parent>
    <groupId>fh.se.car.rental</groupId>
    <artifactId>fh</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <description>FH Campus Rental Car Web Service</description>
    <properties>
        <java.version>11</java.version>
        <sonar.projectKey>cajlakem_SE_Car_Rental_WebApp</sonar.projectKey>
        <sonar.organization>cajlakem</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <plugin.prettier.goal>write</plugin.prettier.goal>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.hubspot.maven.plugins</groupId>
                <artifactId>prettier-maven-plugin</artifactId>
                <version>0.10</version>
                <configuration>
                  <printWidth>90</printWidth>
                  <tabWidth>2</tabWidth>
                  <useTabs>false</useTabs>
                  <ignoreConfigFile>true</ignoreConfigFile>
                  <ignoreEditorConfig>true</ignoreEditorConfig>
                  <!-- Use <inputGlobs> to override the default input patterns -->
                  <inputGlobs>
                    <!-- These are the default patterns, you can omit <inputGlobs> entirely unless you want to override them -->
                    <inputGlob>src/main/java/**/*.java</inputGlob>
                    <inputGlob>src/test/java/**/*.java</inputGlob>
                  </inputGlobs>
                </configuration>
                <executions>
                  <execution>
                    <phase>validate</phase>
                    <goals>
                      <goal>${plugin.prettier.goal}</goal>
                    </goals>
                  </execution>
                </executions>      
              </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
          <id>jenkins</id>
          <activation>
            <property>
              <name>env.JENKINS</name>
            </property>
          </activation>
          <properties>
            <!-- But in our CI environment we want to validate that code is formatted -->
            <plugin.prettier.goal>check</plugin.prettier.goal>
          </properties>
        </profile>
      </profiles>

</project>
